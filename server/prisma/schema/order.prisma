model Order {
    id Int @id @default(autoincrement())
    status Order_Status @default(PENDING)

    completedAt DateTime? @map("completed_at")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    userId Int @map("user_id")
    user User @relation("UserOrders", fields: [userId], references: [id])
    courierId Int @map("courier_id")
    courier User @relation("CourierOrders", fields: [courierId], references: [id])

    orderItems Order_Items[]
    chat Chat?
    payment Payment?
    reviews Order_Review[]

    @@index([userId])
    @@index([courierId])
}

model Order_Items {
    id Int @id @default(autoincrement())
    quantity Int

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    orderId Int @map("order_id")
    order Order @relation(fields: [orderId], references: [id])
    productId Int @map("product_id")
    product Product @relation(fields: [productId], references: [id])

    @@index([orderId]) 
    @@index([productId]) 
    @@map("order_items")
}

model Order_Review {
    id Int @id @default(autoincrement())
    rating Int
    comment String?

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    orderId Int @map("order_id")
    order Order @relation(fields: [orderId], references: [id])
    userId Int @map("user_id")
    user User @relation(fields: [userId], references: [id])

    @@index([orderId])
    @@index([userId])
    @@map("order_reviews")
}

enum Order_Status {
    PENDING
    ACCEPTED
    REJECTED
    DELIVERED
    CANCELLED
}